{"./":{"url":"./","title":"首頁","keywords":"","body":"迪球NFT管理介面 規格說明文件 製作人: 蘇品瑒 指導教授: 李維聰 老師 教授 專案製作時間: 2022 年 7 月 20 日 文件製作時間: 2022 年 8 月 27 日 "},"src/introduction.html":{"url":"src/introduction.html","title":"前言","keywords":"","body":"前言 動機 為了幫助迪球蹦彩樂園的擴大宣傳，預計約莫在9月時，將初步發售首批的吉祥物系列NFT，因數量不小而大大增加了管理方面的需求，因此本人在七月下旬時受李老師教授委託，藉由此次難得的機會，協助迪球蹦彩樂園，開發製作與設計系列NFT後台管理系統，在此再次感謝公司與老師可以給我這個機會參與實際的專案開發與經驗累積 ! 目的 為了能有效且可控的管理大數量的NFT，除了發行人基本NFT鑄造與空投外，掌握與限制NFT的動向與擁有權是最需要謹慎把關的細節，之外，考量安全機制的加入更能為整個系統更加完整與安全，以此保障客戶隱私與防備財產的竊取損失。 目的三角關係圖 : CSR開發與使用理由 整個介面網頁的基礎設計發想，是以 CSR(client Server Rendering) 的設計框架為一開始的出發點，前端(front-end)負責 SPA(Single Page Application) 的建置，後端(back-end)負責純API資料的傳輸串接，最後再應用區塊練技術於其之中。 一開始使用CSR框架的原因，純粹是為了能讓系統之後的維護工作減輕負擔，且增加開發的進度效率與基本品質，而事實上，也有其他可行的開發框架來做方案選擇，只不過只是性能與兼容性上的些許差異而已，如下 : 傳統MVC架構的SSR(Server Side Rendering)框架，純粹依靠伺服端渲染UI畫面。 擁有前端框架的SSR框架，前後端通吃的輕量級Next Js框架。( 關於Next框架 ) 初探 Server-Side-Rendering 與 Next.js . . . 為什麼網站要做成 SPA？SSR 的優點是什麼？ 其實在開發後期，才發現有Next Js框架的存在，它的好處不僅可以改善初始畫面渲染的問題，也能把前後端整合成一個統一管理的URL端口，然而缺點除了可能讓程式變得不易於整理，系統整合也許也會增加不少困難。 如果尚有充餘的時間與多餘的成本，改版成Next Js或許也是不錯的選擇，雖然不是非常必要。 關於 本文件採用Gitbook電子書作為此次的板書工具，如想知道更多gitbook詳細請點擊此。 撰寫此文件的目的在於可供此專案，往後整合與技術交接時，能可更加快速了解全局設計架構與技術理念與概念，也能在閱讀核心原始碼時更能得心應手，進而減少程式碼維護上的困難與改版，因本人第一次撰寫此類文件且持續學習中，所以可能隱約增加了部分閱讀上的困難，此部分再多多見諒了。 點即往頁左側目錄，開始了解整個系統的運作 ! ( . . . . . . 點我開始 ) "},"src/building/":{"url":"src/building/","title":"基礎與建置","keywords":"","body":"技術基礎與建置 技術基礎 因為整體網頁系統涵蓋到區塊練的技術範圍，所以Web3.0在之中的定位就非常重要，如果界定不清的話，可能會造成不必要的性能浪費與成本浪費，於是以下列出整體開發上所需要的技術基礎，幫助開發與維護上的整體構思。 web2層 前端 : SPA單頁應用程式 框架 : React JS (函式庫) 因為後台網頁，因此不考慮UX美工設計需求 ! 後端 : Node Js伺服器 框架 : Express JS (函式庫) 因前端已負責網頁渲染，因此伺服器只單純處理API的資料串接供應 ! web3層 區塊練 : 以太坊(Ethereum)網路 框架 : Ethers Js (函式庫) 因暫時沒有撰寫智能合約的必要，因此大部分功能不必直接與區塊練交互 基本環境需求 安裝 npm (LTS Version) 點擊連結下載Node.js並安裝LTS穩定版本，npm會一起被安裝，完誠後請務必重新開機。 安裝 Vidual Studio Code (可跳過) 點擊連結下載VS Code "},"src/building/preparing.html":{"url":"src/building/preparing.html","title":"預備知識","keywords":"","body":"預備知識 React框架的概念與使用 Express框架的概念與使用 基本BlockChain的認識 以太坊(Ethereum)與智能合約 Web2.0 V.S. Web3.0 應用區塊練技術最核心的技術，莫過於他與傳統網頁之間(Web2.0)的交互問題，而現在普遍大家均把這樣的新式網頁稱為Dapp(Decentralized Application)。 基本上可以想成在傳統Web2.0架構中，前端網頁所要渲染的後台資料，通常均由一個中心化的中心運算伺服器所提供所有資料，而在Dapp概念中，反而這些後臺資料，是由區塊練這個超大分散式運算伺服器，去運算資料與提供資料。 不過事實上，現在大部分的Dapp開發，不見得是屬於真正的Web3.0，有些時後礙於一些原因，像是高昂的開發成本、資料備份需求、隱私問題或其他問題，開發上不得不使用傳統集中式伺服器去處理資料與建置資料庫，於是現在的Dapp都只是屬於Web2.5的過渡階段，前後端均可與區塊練做到交互上目的。 Dapp運作原理與資料傳輸原理 Web3 Provider與MetaMask的關係 非同值化貨幣(NFT) ? Opensea(最大NFT二級市場) NFT元數據(MetaData) "},"src/building/front.html":{"url":"src/building/front.html","title":"前端UI渲染建置","keywords":"","body":"前端UI渲染建置 主要概念 前端架構 模組概覽 簡易UX渲染 路由配置 數據需求 暫存數據管理 "},"src/building/back.html":{"url":"src/building/back.html","title":"後端伺服器建置","keywords":"","body":"後端伺服器建置 主要概念 後端架構 模組概覽 基本伺服器設定 數據需求 API路由配置 "},"src/building/blockchain_interact.html":{"url":"src/building/blockchain_interact.html","title":"區塊練資料交互","keywords":"","body":"區塊練資料交互 主要概念 前端架構 模組概覽 "},"src/layout_designing/":{"url":"src/layout_designing/","title":"佈局設計","keywords":"","body":"佈局設計 摘要 本章節之主要目的，在於解構與剖析整個系統之運作架構，以及畫面渲染處理上的完整結構與佈局，一路從前端探討至後端，建構出完整的設計藍圖。 快速導覽 主要架構 權限層級 路由佈局 頁面版面配置 UI組件佈局 後端伺服器架構與角色定位 "},"src/layout_designing/architecture.html":{"url":"src/layout_designing/architecture.html","title":"整體架構","keywords":"","body":"整體架構 關係運作架構圖 以下架構圖為整個管理系統在運作上，各個運作端互相的對應關係，以及運作時會進行的可能溝通動作。 為了大概描述每個運作端自己所負責的職責，以下分別作介紹 : 以太坊區塊鏈(Ethereum Block Chain) : 前後端與智能合約的交互架構，簡單來說，前後端必須透過Web3 Provider的中介程式，把資料請求轉換成以太坊節點可理解的指令代碼，並經由這些由分散式伺服器所組成的結點，去操作實際上智能合約的讀寫，而轉換的之中可能還會透過其他Dapp伺服器所提供的服務去做溝通。 蹦彩樂園官網 : 由於官網建置為獨立於此NFT管理系統之外的專案開發，所以實際運作時官網網頁是運作在額外的Web Server上的，而又因為為了方便管理員進入NFT管理系統，因此安排上就必須從官網上的一個外部連結去進入。 前端(Front-end) : 因為採取CSR設計框架，已經把全端系統分離成前後端去運作，所以為了可以渲染整個網頁的運作，還需額外依靠一個Web Server去提供網頁呈獻，且運作中可能還會需要與區塊鏈與後端伺服器做溝通。 後端(Back-end) : 因為採取CSR設計框架，已經把全端系統分離成前後端去運作，所以後端伺服器就無需處理網頁呈獻的工作，反而只需處理資料的流動與處理而已，且運作中可能還會需要與區塊鏈與第三方服務做溝通。 第三方服務(Third-part Service) : 因為為了讓後端伺服器只需專心運作NFT管理系統的資料處理，所以某些伺服器的功能是採用第三方服務所提供的現成服務，減少開發上的困難。 硬體需求 在往後的上線部屬工作上，透過上方架構圖，就可以條列出實際運作上所需要的硬體設備。 NFT管理網站前端Web Server NFT管理網站後端Node Server "},"src/layout_designing/routes_layout.html":{"url":"src/layout_designing/routes_layout.html","title":"路由佈局","keywords":"","body":"路由佈局 路由概念 根據維基百科的定義，路由（routing）就是通過互聯的網路把資訊從源位址傳輸到目的位址的活動。 在網頁APP中，路由通常指的是各個頁面在此APP中，各自所代表不同URL中的路徑，如下圖所示 : 圖中的路徑就是我們在此要設計並說明的重點，每個不同的路徑，應該會對應到不同的初始頁面。 CSR框架下的路由設計 如同前言此章節所提到的，在不同的網頁APP設計框架下，也會有不同的開發方式，如下 : 傳統MVC架構的SSR框架 : 在傳統伺服器網頁渲染的框架中，因尚無前後端分離的概念，因此路由建置實際上是依靠MVC架構幫助，利用一個view目錄來專門處理網頁表單的渲染處理。 渲染的概念，大概通常會有一個layout子目錄來處理各種靜態網頁表單的模板，而在view目錄下會存放著許多不同動態網頁的路由HTML內容，當要渲染某一畫面時，伺服器會提供一個該頁面的路徑HttpRequest，呼叫時把動態網頁嵌入至靜態模板之中，最後HttpResponse給瀏覽器使用。 前後端分離的CSR框架 : 在前後端分離情況下，主要畫面渲染的工作已經完全交由前端框架來處理，因此通常在每一種前端框架中，會需要利用Javascript來撰寫每一個頁面的路由路徑邏輯。 如React前端框架的react router。 擁有前端框架的SSR框架 : 在這種框架下，路由的設計結合了上述兩種框架的優點，路由建構方法同時能以前端路由或伺服器路由來實現。 以Next Js全端框架來舉例，框架默認採取一個叫做\" file-based routing \"的技術，意思是每個檔案代表一個 route，而檔案名稱會變成 route 路徑名稱。 因為此NFT管理系統為CSR架構，且前端框架為使用React框架，所以我們會使用框架中的React Router Dom模組來建置所有的頁面路由，以下為主要路由的結構與設計 : 程式碼片段 : 在此我們附上整個APP路由配置的程式碼片段，方便已了解React框架的技術人員能更快了解之中的運作邏輯。 import { HashRouter, Route, Routes, Navigate, useNavigate } from 'react-router-dom'; import NftManagerInterface from \"./component/NftManagerInterface\"; import Guide from \"./component/managerAccount/Guide\"; import TraidingStatus from \"./component/manager/TraidingStatus\"; import NavPage from \"./component/NavPage\"; import SignIn from \"./component/managerAccount/SignIn\"; import SignOut from \"./component/managerAccount/SignOut\"; import ForgotPassword from \"./component/managerAccount/ForgotPassword\"; function App() { return ( }/> }/> }/> }/> }/> }/> }/> }/> }/> ); } export default App; 路由結構圖 : 此結構圖簡單說明，各個路由路徑之間的父子關係，並不包含其他任何邏輯。 藍色 : 主要路由類別路徑，不會被分配任何頁面渲染。 黃色 : 目前已建置完成(可能會再修改)的頁面路由。 紅色 : 目前為空頁面，未被建置的頁面路由。 主要路由類別路徑 : /user : 負責管理帳號相關的功能，當直接訪問此路由時，會直接被導航至登入頁面，也就是http://localhost:3000/user/login。 /account : 負責管理帳號登入後的主要系統功能使用，當直接訪問此路由時，因默認無條件情況下為未曾登入的狀態，因此會直接被導航至登入頁面，也就是http://localhost:3000/user/login。 /redirect : 負責管理重新路由導向功能，當直接訪問此路由時，會直接被導航至初始頁面，也就是http://localhost:3000。 路由流程圖 : 為了方便講解，所以我們以本地伺服器來運作整個APP，host為localhost，port為3000，並且假定使用者只會從一開始的URL來操作此APP，也就是http://localhost:3000。 未來規劃 因為還未針對NFT管理系統主要功能之外的其他功能或頁面，來做更詳細的規劃與建置，所以在未來中，會慢慢的補足以及增加可能的路由頁面。 "},"src/layout_designing/permission.html":{"url":"src/layout_designing/permission.html","title":"權限層級","keywords":"","body":"管理者權限 權限概念 通常網站使用者的角色地位中，一般會員與後台管理員主要的不同，在於多少網站中的功能是被授權使用，而最簡單的區分方法，舉例如下 : 一般會員 : 只能控制自己個人的資料。 管理員 : 能控制所有一般會員的資料。 但在較大型的網站中，管理員又可以再細分為不同的地位層級，但因為此系統為單純的NFT管理系統，所以權限設計上可能不會到非常複雜或甚至不做層級上的區分。 前後台概念 根據主要架構此章節的介紹，為了能更加理解此系統架構的設計原因與好處壞處，進而了解權限設計上的原因與優缺點，我們必須額外探討，後台與前台在不同架構下會產生的問題，以及一般設計上的做法。 大致上可以把前後台的架構設計分為兩種，如下 : Web伺服器分離 : 一般來說最保險的做法，是讓運作後台管理系統的Web Server與前台官網的Web Server做完全的分離(後台網頁不嵌入在前台網頁之中)，即管理員並非透過前台網頁登入後台管理系統，而是直接訪問後台本身伺服器上的網頁。但這個做法會需要前後台各自的伺服器提供網頁使用，不過好處則是可以預防非管理者進入後台的風險，甚至是讓有心人士需額外花費成本突破後台伺服器。 Web伺服器合併 : 相反的作法，是在初始開發時，就額外提供一個頁面路由給後台做使用，也就是前後台由統一Web Server來運作，且只需額外產生一個會員是專屬於進入後台的管理員帳號，利用此帳號來進入後台。這樣的做法唯一的好處是方便之後的維護與程式碼管理，但就會因此製造了一個淺在的破口來提供有心人士來突破。 不管在哪個架構上，都可以看出造成的結果，影響的只是安全性的高低與進入後台方法的不同，因此實際上仍然需依照需求與網站類型去選擇作法。 在Web伺服器分離下的權限結構與設計 開發初期時因為本來就決定好，要把NFT管理系統與官網製作為不同的專案開發，於是順勢就變成Web伺服器分離的設計架構，這樣也就能確保安全上的問題。 不過又因顧慮到方便管理員進入NFT管理系統，因此就形成在Web伺服器分離下，但做法仿照Web伺服器合併的設計架構，操作流程如下 : 在官網的地方提供一個管理員帳號(可訪問一般會員不能訪問的網頁元素)。 利用此帳號登入。 點擊可連結至NFT管理網站的按鈕。 透過此按鈕連結至NFT管理網站。 最後我們可以在此架構下，建構出整個權限的結構與設計，如下圖 : 權限概覽 : 權限流程 : 整個設計中，可以看到在進入NFT管理系統之前，必須再額外使用另一組帳號密碼來登入到之中，這麼做是為了多添加一層安全防護機制，以達到雙重保護的機制，之外在NFT管理系統中只要牽涉到需改寫NFT智能合約的功能時(如鑄幣或空投)，就必須先登入管理員專用的以太坊錢包帳號，這不只為必需的且也能多一道安全保障。 未來規劃 透過如此權限結構的佈局，就能輕易掌握之後的開發與維護，且當要額外設計更高的安全結構時，也能很快的構思與設計。 由於目前的開發還未加入安全身分認證的安全機制，所以整個系統安全仍未十分完善，不過在未來中這部分是必須加入且近一步設計的必要安全機制，權限的結構也能更加清楚與完善。 此連結為安全認證的介紹簡報 : 安全認證 "},"src/layout_designing/pages_layout/":{"url":"src/layout_designing/pages_layout/","title":"頁面版面配置","keywords":"","body":"頁面版面配置 摘要 當瞭解了整個系統背後的運作架構以及權限層級的設計後，接者就要開始依照路由佈局此章節所設計的路由結構與流程，去設計每個頁面的版面配置的呈現，除了以便日後視覺設計上的更動更為方便，也能去更快遍覽所有系統頁面上的畫面外觀。 頁面導覽 初始頁面路由 登入頁面路由 找回密碼頁面路由 主頁路由 教學指導頁面路由 交易數據頁面路由 關於頁面路由 求助頁面路由 聯絡我們頁面路由 登出頁面路由 "},"src/layout_designing/pages_layout/beginning_route.html":{"url":"src/layout_designing/pages_layout/beginning_route.html","title":"初始頁面路由","keywords":"","body":"初始頁面路由(http://localhost:3000) 頁面配置與解說 不直接進入登入頁面的原因，單純只是想讓當前使用的管理員，更加清楚他目前所使用的系統為NFT管理系統。 如下說明圖中的各個元素 : NFT管理系統名稱 : 顯示NFT管理系統總名稱。 NFT管理系統登入按鈕 : 當按下此按鈕時，會導航至登入頁面路由，http://localhost:3000/user/login。 登入提示字段 : 引導使用人按下登入按鈕。 "},"src/layout_designing/pages_layout/login_route.html":{"url":"src/layout_designing/pages_layout/login_route.html","title":"登入頁面路由","keywords":"","body":"登入頁面路由(http://localhost:3000/user/login) 頁面配置與解說 如下說明圖中的各個元素 : 帳號密碼輸入欄位 : 此兩個欄位需分別輸入帳號密碼字串，並且均可輸入任意ASCII字元。 登入按鈕 : 當按下此按鈕時，如果登入成功時，會導航至主頁頁面路由，http://localhost:3000/account/:username。 找回密碼連結 : 當按下此連結時，會導航至找回密碼頁面路由，http://localhost:3000/user/forgot_password。 "},"src/layout_designing/pages_layout/forgot_password_route.html":{"url":"src/layout_designing/pages_layout/forgot_password_route.html","title":"找回密碼頁面路由","keywords":"","body":"找回密碼頁面路由 尚未開發完成 "},"src/layout_designing/pages_layout/home_page_route.html":{"url":"src/layout_designing/pages_layout/home_page_route.html","title":"主頁路由","keywords":"","body":"主頁路由(http://localhost:3000/account/:username) 頁面配置與解說 利用管理員帳號登入成功時，此頁面URL路徑之中會顯示當前會員帳號名稱( 例如http://localhost:3000/account/managertest )，並且除了需連接區塊鏈錢包才能使用NFT批量鑄造與空投功能之外，均能使用全部系統上的功能。 頁首區塊 : 如下說明圖中的各個元素 : 頁首區塊 : 位於圖中紅色粗線所框選的功能區域。 NFT管理系統總名稱 : 顯示NFT管理系統名稱字段。 即時時刻 : 根據使用者當下所使用裝置中的時間，即時顯示該時刻。 教學指導按鈕 : 當按下此連結時，會導航至教學指導頁面路由，http://localhost:3000/account/:username/guide。 交易數據按鈕 : 當按下此連結時，會導航至教學指導頁面路由，http://localhost:3000/account/:username/traidingStatus。 登出按鈕 : 當按下此連結時，會導航至教學指導頁面路由，http://localhost:3000/user/:username/logout。 區塊鏈錢包連接按鈕 : 當按下此按鈕時，如果有安裝MetaMask瀏覽器外掛插件，則會依序彈跳視窗進行錢包連線的程序步驟。 區塊鏈錢包連接狀態提示字段 : 當按下區塊鏈錢包連接按鈕，並且成功完成錢包連線時，會即時顯示連接成功的字段提醒。 OTP二次確認區塊 : 如下說明圖中的各個元素 : OTP二次確認對話框區塊 : 顯示OTP二次確認的對話框功能區塊。 OTP驗證狀態提示字段 : 顯示OTP驗證當下是否被驗證的狀態字段提醒。 OTP驗證碼輸入欄位 : 此輸入欄位需輸入來自所收到電子郵件上正確的OTP驗證碼字串，且可輸入任意ASCII字元。 OTP驗證按鈕 : 按下此按鈕時，會把OTP驗證碼輸入欄位所輸入的驗證碼，送回系統後台伺服器中進行OTP驗證程序，如果驗證成功時，OTP驗證狀態提示字段會顯示驗證成功。 OTP驗證郵件發送按鈕 : 按下此按鈕時，會經由系統後台伺服器即時發送OTP驗證電子郵件，至預先所設定好的目標電子信箱中。 關閉OTP二次確認對話框按鈕 : 點擊此按鈕時，可關閉當下已開啟之OTP二次確認對話框。 NFT批量鑄造區塊 : 如下說明圖中的各個元素 : NFT批量鑄造區塊名稱 : 顯示NFT批量鑄造功能名稱字段。 OTP二次確認按鈕 : 按下此按鈕時，開啟OTP二次確認功能對話框。 NFT項目圖片 : 顯示此NFT項目的外觀圖片，圖片可能儲存於任意雲端或星際網路上。 NFT項目功能區塊 : 為主要NFT批量鑄造功能使用之區塊。 NFT已鑄造數量狀態 : 即時顯示NFT項目已被鑄造之實際數量。 NFT基本資訊按鈕 : 點擊此按鈕時，顯示NFT項目基本資訊之彈跳框。 NFT基本資訊表格 : 顯示NFT項目基本資訊之表格於彈跳框之中，包括NFT系列編號、發佈單位(人)、NFT最大供給量、是否可鑄造之狀態。 NFT欲鑄造數量輸入欄位 : 此輸入欄位需輸入欲鑄造NFT數量之字串，且可輸入任意ASCII字元。 NFT鑄造按鈕 : 點擊此按鈕時，如已輸入數量至NFT欲鑄造數量輸入欄位，且已連接區塊鏈乙太坊錢包帳號時，需依序完成NFT鑄造程序之流程，當完成鑄造後，NFT已鑄造數量狀態會即時更新數量狀態至最新。 NFT在Opensea上的詳細資訊連結 : 點擊此連結時，可以查看此NFT在Opensea二級市場上的詳細資訊與動態，https://opensea.io。 NFT批量空投區塊 : 如下說明圖中的各個元素 : NFT批量空投區塊名稱 : 顯示NFT批量空投功能名稱字段。 OTP二次確認按鈕 : 按下此按鈕時，開啟OTP二次確認功能對話框。 NFT智能合約地址輸入欄位 : 此輸入欄位需輸入NFT該智能合約地址之字串，且可輸入任意ASCII字元。 NFT在智能合約中的ID輸入欄位 : 此輸入欄位需輸入NFT該在智能合約中ID之字串，且可輸入任意ASCII字元。 NFT項目顯示加載按鈕 : 點擊此按鈕時，可依照兩輸入欄位所輸入的內容，發送請求NFT項目在智能合約上的相關資訊，並且加載顯示至此NFT批量空投區塊名稱之中。 NFT項目圖片 : 顯示被加載顯示之NFT項目外觀圖片。 CSV格式空投名單輸入欄位 : 此輸入欄位需輸入欄位中所提示之CSV格式之空投名單範例字串，且可輸入任意ASCII字元。 NFT空投按鈕 : 點擊此按鈕時，如已加載顯示所選定之NFT項目與完成輸入格式正確之空投名單，且已連接區塊鏈乙太坊錢包帳號時，需依序完成NFT空投程序之流程，當完成空投後，會於下方顯示已空投完成之提示字段。 NFT持有人驗證區塊 : 如下說明圖中的各個元素 : NFT持有人驗證區塊 : 位於圖中紅色粗線所框選的功能區域。 NFT持有人驗證區塊名稱 : 顯示NFT持有人驗證功能名稱字段。 NFT持有人以太坊格式錢包地址輸入欄位 : 此輸入欄位需輸入乙太坊格式的錢包地址字串，且可輸入任意ASCII字元。 調閱後台資料連接狀態提示字段 : 當按下NFT持有人驗證按鈕後，會於NFT持有人以太坊格式錢包地址輸入欄位下方，顯示與後台連結果的提示字段。 NFT持有人驗證按鈕 : 當按下此按鈕時，會與系統後台伺服器請求，關於此驗證人是否擁有任何NFT收藏，並且把結果顯示於畫面中。 NFT項目概要資訊 : 顯示此驗證人NFT收藏大概的基本資訊，其中包括NFT外觀、NFT項目名稱、NFT系列編號、NFT在智能合約上專有ID，以及NFT當前數量。 NFT項目在Opensea上的詳細資訊連結 : 點擊此連結時，可以查看此NFT在Opensea二級市場上的詳細資訊與動態，https://opensea.io。 NFT持有人名單區塊 : 如下說明圖中的各個元素 : NFT持有人名單區塊 : 位於圖中紅色粗線所框選的功能區域。 NFT持有人名單區塊名稱 : 顯示NFT持有人名單功能名稱字段。 請求加載後台數據按鈕 : 當按下此按鈕後，可向系統後台伺服器請求加載相關的NFT持有人名單數據，並且提供此區塊功能做使用。 NFT項目選擇下拉選單 : 點擊此下拉選單時，會下拉選單顯示各個NFT項目的名稱，當點擊所要選擇的NFT項目名稱時，立即鎖定該NFT項目相關數據。 NFT項目開啟按鈕 : 如果已選擇NFT項目下拉選單某一NFT項目時，點擊此按鈕後，可開啟已鎖定NFT項目的NFT持有人名單對話框。 NFT總持有人名單下載按鈕 : 點擊此按鈕時，可立即下載全部已發行NFT項目之總持有人名單Excel檔案。 NFT項目對話框區塊 : 顯示已被選定NFT項目之下載對話框區塊。 NFT項目概要資訊 : 顯示已被選定之NFT項目大概的基本資訊，其中包括NFT外觀、NFT項目名稱、NFT在智能合約上專有ID，以及NFT當前數量。 NFT項目持有人名單下載按鈕 : 點擊此按鈕時，可立即下載當下NFT項目之持有人名單Excel檔案。 關閉NFT項目對話框按鈕 : 點擊此按鈕時，可關閉當下已開啟之NFT項目對話框。 頁尾區塊 : 如下說明圖中的各個元素 : 頁尾區塊 : 位於圖中紅色粗線所框選的功能區域。 關於連結 : 當按下此連結時，會導航至關於頁面路由。 求助連結 : 當按下此連結時，會導航至求助頁面路由。 聯絡我們連結 : 當按下此連結時，會導航至聯絡我們頁面路由。 "},"src/layout_designing/pages_layout/guiding.html":{"url":"src/layout_designing/pages_layout/guiding.html","title":"教學指導頁面路由","keywords":"","body":"教學指導頁面路由 尚未開發完成 "},"src/layout_designing/pages_layout/trading_data_pool_route.html":{"url":"src/layout_designing/pages_layout/trading_data_pool_route.html","title":"交易數據頁面路由","keywords":"","body":"交易數據頁面路由 尚未開發完成 "},"src/layout_designing/pages_layout/about_route.html":{"url":"src/layout_designing/pages_layout/about_route.html","title":"關於頁面路由","keywords":"","body":"關於頁面路由 尚未開發完成 "},"src/layout_designing/pages_layout/help_route.html":{"url":"src/layout_designing/pages_layout/help_route.html","title":"求助頁面路由","keywords":"","body":"求助頁面路由 尚未開發完成 "},"src/layout_designing/pages_layout/contact_us_route.html":{"url":"src/layout_designing/pages_layout/contact_us_route.html","title":"聯絡我們頁面路由","keywords":"","body":"聯絡我們頁面路由 尚未開發完成 "},"src/layout_designing/pages_layout/logout.html":{"url":"src/layout_designing/pages_layout/logout.html","title":"登出頁面路由","keywords":"","body":"登出頁面路由(http://localhost:3000/user/:username/logout) 頁面配置與解說 當進到此頁面時，會開始立即計時，計時結束時會重新導航至登入頁面，http://localhost:3000/user/login。 如下說明圖中的各個元素 : 已登出提示字段 : 提醒使用人登出後的狀態，並且顯示當前使用人之帳號名稱。 登出後安全說明 : 內文說明登出後相關的安全建議。 "},"src/layout_designing/UI_components_layout.html":{"url":"src/layout_designing/UI_components_layout.html","title":"UI組件佈局","keywords":"","body":"UI組件佈局 React組件與概念 目的 組件佈局與架構 "},"src/layout_designing/server_architecture_and_position.html":{"url":"src/layout_designing/server_architecture_and_position.html","title":"後端伺服器架構與角色定位","keywords":"","body":""},"src/function_analyzing_and_introduction/":{"url":"src/function_analyzing_and_introduction/","title":"功能解析","keywords":"","body":"功能解析 摘要 本章節主要目的，在於仔細解析與解說所有功能的運作原理與設計理念，同時可與上一章節的設計藍圖搭配使用。 而如果不想知道這些繁重的工程解釋，單純只是想了解如何使用此網站的話，可直接跳過此章節至下一章節，將解說的是網站介面的使用。 下一章 : 操作流程 快速導覽 基本功能 主要功能 附加功能 WebHooks "},"src/function_analyzing_and_introduction/basic_function/":{"url":"src/function_analyzing_and_introduction/basic_function/","title":"基本功能","keywords":"","body":""},"src/function_analyzing_and_introduction/basic_function/login.html":{"url":"src/function_analyzing_and_introduction/basic_function/login.html","title":"登入","keywords":"","body":""},"src/function_analyzing_and_introduction/basic_function/guide.html":{"url":"src/function_analyzing_and_introduction/basic_function/guide.html","title":"教學指導","keywords":"","body":""},"src/function_analyzing_and_introduction/basic_function/helpler.html":{"url":"src/function_analyzing_and_introduction/basic_function/helpler.html","title":"雜項輔助功能","keywords":"","body":""},"src/function_analyzing_and_introduction/basic_function/logout.html":{"url":"src/function_analyzing_and_introduction/basic_function/logout.html","title":"登出","keywords":"","body":""},"src/function_analyzing_and_introduction/main_funciton/":{"url":"src/function_analyzing_and_introduction/main_funciton/","title":"主要功能","keywords":"","body":"主要功能 說明 目前所有主要功能，均為測試階段，所以NFT目前也是只再Rinkeby以太坊測試網路上操作部屬，正式上線後就會切換為主網運作一切的功能操作。 解說架構 動機 概念 架構 設計方法 操作流程 組件說明 存在問題 "},"src/function_analyzing_and_introduction/main_funciton/wallet_connect.html":{"url":"src/function_analyzing_and_introduction/main_funciton/wallet_connect.html","title":"錢包連接","keywords":"","body":"錢包連接 動機 只要與以太坊網路請求資料或寫入資料，就一定要與它搭起之間的橋樑，於是必須做出一個按鈕，可以登入自己的區塊練錢包，利用錢包取得使用此系統的操作權限，並且保持登入狀態，以利之後可能的交易簽屬。 概念 如果了解Web3 Provider的概念一定會知道(什麼是Web3 Provider ?)，這個提供者其實就是所謂的橋樑，因為區塊練網路為完全不同的結構概念，無法利用傳統的HTTP協定做之間的溝通，所以必須利用特殊的傳輸協定稱作 \" JSON-RPC \"，它是以JSON的形式去把Javescript代碼轉換成Json代碼，利用此代碼發出請求(Request)，再透過區塊練網絡專用的RPC伺服器與區塊練溝通。 不過其實在Web3 Provider還未問世前，與智能合約溝通唯一方式，是只能通過以太坊節點(json-rpc服務器)所提供的json-rpc API。而使用json-rpc不是非常容易，所以web3函式庫就提供了一系列的抽象API呼叫，只要透過這個函式庫，就能與任何以太坊結點進行交互。 然而我們只是要開發簡單的功能，所以無須自己架設我們自己的以太坊結點伺服器，我們只需透過第三方提供的免費方案，就能藉由第三方架設好的伺服器與區塊練做溝通。 運作原理 圖片取自https://github.com/ethereumbook/ethereumbook/issues/376 設計方法 邏輯圖 我們因為只是要連線到我們的錢包，並且把錢包資訊運作在前端網頁上，所以唯一要做的事，就是透過函式庫產生的provider，連接到區塊練錢包，並把錢包資料儲存在網頁中。 我們選擇的函式庫為Ethers Js，它是參考了Web3 Js的設計並進行了優化改良，再開發出更為輕量直觀的函式庫。 不過事實上，因為我們沒有額外的特殊需求，所以我們選用MetaMask作為我們的錢包入口，MetaMask在瀏覽器中為第三方外掛插件，它的運作底層就已經利用Web3 Js函式庫為我們產生provider並連結至infura第三方以太坊結點了，所以在這裡我們只需要直接利用Ethers Js去連結MetaMask錢包就好了。 功能布局 存在問題 "},"src/function_analyzing_and_introduction/main_funciton/nft_mint.html":{"url":"src/function_analyzing_and_introduction/main_funciton/nft_mint.html","title":"NFT鑄造","keywords":"","body":"NFT鑄造 動機 要在網頁上可以鑄造NFT並不是件容易的事，其中涉及了許多以太坊代幣製作發行的技術應用，所以大致上分為三種鑄幣方法 : 外部連結至Opensea官網，在Opensea上登入錢包直接鑄造NFT。 撰寫程式製作與opensea一樣類似的作法。 額外先撰寫智能合約，部屬智能合約後，在網站上進行鑄造。 概念 不管是甚麼鑄幣方法，底層概念均為相同，只是手法的不同，所以以最為基本的NFT鑄幣方法來解說。 以下步驟為大概的鑄幣流程 : 以Solidity語言撰寫智能合約，並選擇代幣標準ERC1155(何謂ERC1155)下去編寫代幣邏輯。 把撰寫好的智能合約透過以太坊結點部屬上線至以太坊網路上。 生成NFT所需要的元數據，包括圖片URL、名字、DNA或其他。 把NFT元數據URI輸入更新至部屬好的智能合約上。 在前端網頁匯入智能合約產生的ABI編碼。 透過Web3 Js函式庫與以太坊連結。 調用ABI方法進行鑄造。 透過Web3 provider簽署交易。 完成NFT鑄造。 由上面步驟可知，之中必須先撰寫智能合約模板上線至以太坊網路，而前端需運用Web3 Js函式庫去利用合約ABI與智能合約做交互，最後才能成功鑄造出NFT，所以在使用者體驗這部分是比較需要去思考的地方。 架構 運作原理 邏輯圖 之中有加入OTP認證的機制，有關OTP認證的詳細說明請看附加功能 - 二次確認。 設計方法 由於初步設計只是要在前端網頁實現MFT鑄造的功能，所以先採用最基本的方法，先撰寫智能合約，部屬智能合約後，在網站上進行鑄造。 我們一樣選用Ethers Js函式庫進行智能合約的交互。 流程設計簡單來說，就是先在網頁上選擇要鑄造的NFT，並且輸入要鑄造的數量，最後發起交易並簽屬，等待鑄造完成提醒。 組件說明 存在問題 "},"src/function_analyzing_and_introduction/main_funciton/nft_airdrop.html":{"url":"src/function_analyzing_and_introduction/main_funciton/nft_airdrop.html","title":"NFT空投","keywords":"","body":"NFT空投 動機 NFT空投簡單來說，就是把鑄造好的NFT，從鑄造者錢包轉移NFT至其他欲被轉移的錢包地址，但通常來說會有很多種空投的形式，不過在這裡我們只是要單純轉移NFT給購買NFT的錢包地址而已，而實際上有兩種方法可以實現空頭 : 在前端網頁以迴圈的方式，一個一個NFT地址轉移，每次轉移均發起交易。 撰寫空投智能合約，利用此合約進行空投運作，從頭到尾只需發起一次交易。 概念 以最為基本簡單的NFT空投方法來解說，以下為NFT空投流程 : 輸入要空投的CSV名單(包含錢包地址與各別數量)。 把CSV名單轉為JSON名單。 撰寫迴圈，對JSON名單做遍歷掃描。 對每個地址透過provider進行NFT轉移，並發起交易。 依序簽屬交易，並等待區塊鏈驗證完成。 完成NFT空投。 依照上面步驟，可看出除了需了解CSV格式轉換外，NFT轉移其實做法就與NFT鑄造大同小異。 架構 運作原理 邏輯圖 之中有加入OTP認證的機制，有關OTP認證的詳細說明請看附加功能 - 二次確認。 設計方法 雖然一般Dapp中空投應該要是撰寫空投合約並一次性批量轉移，但是為了簡單實現並測試空投功能，初步設計就先以批量迴圈單一空投來製作。 而這個功能中，為了希望能快速開發並且直觀的設計，所以我們直接引入Opensea所提供的SDK函式庫，利用此函式庫來直接透過Opensea本身提供的API來調用合約，最大的好處在於無須使用Web3 Js函式庫進行繁瑣的環境建置。 組件說明 存在問題 "},"src/function_analyzing_and_introduction/main_funciton/nft_owner_checker.html":{"url":"src/function_analyzing_and_introduction/main_funciton/nft_owner_checker.html","title":"NFT持有人驗證","keywords":"","body":"NFT持有人驗證 動機 NFT功能是最為簡單直觀的，簡單來說只是要檢查某個地址是否擁有任何特定的NFT系列，有的話則顯示所以NFT收藏與資訊。 概念 驗證最基本的做法與鑄造和空投功能大同小異，首先一樣透過provider與智能合約進行交互，把要驗證的錢包地址與合約上目前的所有擁有者一一比對，最後如果有存在的話把所有擁有的系列回傳給API請求者，否則不存在的話回傳未擁有任何NFT的訊息。 架構 運作原理 邏輯圖 設計方法 一般的作法是透過provider調閱智能合約資訊，而更快的方法是直接透過Opensea API代為取得合約資訊，不過在這裡我們使用的是由迪球自家伺服器已經撰寫好的API來獲取NFT資訊。 使用的API端點為 \" /check \"，它會回傳一個Json物件，之中會包含當前錢包地址是否擁有NFT的詳細資訊。 組件說明 存在問題 "},"src/function_analyzing_and_introduction/main_funciton/nft_owner_list.html":{"url":"src/function_analyzing_and_introduction/main_funciton/nft_owner_list.html","title":"NFT持有人名單","keywords":"","body":"NFT持有人名單 動機 簡單來說，我們的目的是要把NFT目前所有持有人的名單，匯出成一個Excel檔案，以提供給抽獎或其他用途。 概念 最基本的做法與驗證功能大同小異，首先一樣透過provider與智能合約進行交互，取得所有NFT目前擁有者所有的地址後，彙整成一個總名單Json物件，最後再把這個Json物件做成一個Excel檔案匯出到前端網頁提供下載。 架構 運作原理 邏輯圖 設計方法 一般的作法是透過provider調閱智能合約資訊，而更快的方法是直接透過Opensea API代為取得合約資訊，不過在這裡我們使用的是由迪球自家伺服器已經撰寫好的API來獲取NFT資訊。 使用的API端點為 \" /owner \"，它會回傳一個Json物件，之中會包含當前所有擁有NFT的錢包地址。 Excel製作模組則使用第三方提供的自製模組來轉換成Excel名單。 此外為了方便調閱使用，還額外提供了個別NFT的擁有者名單。 組件說明 存在問題 "},"src/function_analyzing_and_introduction/optional_function/":{"url":"src/function_analyzing_and_introduction/optional_function/","title":"附加功能","keywords":"","body":"附加功能 解說架構 動機 概念 架構 組件說明 補充 "},"src/function_analyzing_and_introduction/optional_function/double_confirm.html":{"url":"src/function_analyzing_and_introduction/optional_function/double_confirm.html","title":"二次確認","keywords":"","body":"二次確認 "},"src/function_analyzing_and_introduction/optional_function/security_verify.html":{"url":"src/function_analyzing_and_introduction/optional_function/security_verify.html","title":"安全認證","keywords":"","body":"安全認證 "},"src/function_analyzing_and_introduction/optional_function/trading_data.html":{"url":"src/function_analyzing_and_introduction/optional_function/trading_data.html","title":"交易數據","keywords":"","body":"交易數據 "},"src/function_analyzing_and_introduction/server_side_api/":{"url":"src/function_analyzing_and_introduction/server_side_api/","title":"WebHooks","keywords":"","body":"伺服器API 解說架構 動機 概念 架構 API說明 API規格 補充 "},"src/function_analyzing_and_introduction/server_side_api/otp_email_verify.html":{"url":"src/function_analyzing_and_introduction/server_side_api/otp_email_verify.html","title":"OTP郵件認證","keywords":"","body":"OTP郵件認證 "},"src/function_analyzing_and_introduction/server_side_api/all_nft_owner_list.html":{"url":"src/function_analyzing_and_introduction/server_side_api/all_nft_owner_list.html","title":"總NFT持有人名單","keywords":"","body":"總NFT持有人名單 "},"src/operation_flow/":{"url":"src/operation_flow/","title":"操作流程","keywords":"","body":"操作流程 摘要 本章節主要目的，在於教導整個管理介面所有功能的詳細操作流程與須知，讓使用人能快速了解當下系統的運作與概觀。 如果在此章節前，已了解功能解析中所有功能的運作原理與設計架構，就能非常快速的理解接下來的操作流程解說，並且完全掌握此NFT管理系統。 如只是想快速了解如何操作此NFT管理系統的話，也能放心的一步步照著流程解說操作所有功能，不過還是建議先回到前幾章節慢慢理解之中的架構與設計原理。 快速導覽 系統前台網頁操作 系統後台伺服器操作 "},"src/operation_flow/front-end_web_page/":{"url":"src/operation_flow/front-end_web_page/","title":"系統前台網頁操作","keywords":"","body":"系統前台網頁操作 摘要 此小節為關於NFT管理系統前台網頁，各個功能的操作流程與解說。 快速導覽 開始進入 登入 錢包連接 二次確認 NFT批量鑄造 NFT批量空投 NFT持有人驗證 NFT持有人名單 登出 教學指導 交易數據 關於 求助 聯絡我們 安全認證 "},"src/operation_flow/front-end_web_page/start.html":{"url":"src/operation_flow/front-end_web_page/start.html","title":"開始進入","keywords":"","body":"開始進入 操作步驟 打開新瀏覽器，並輸入蹦彩樂園官方網站網址(http://dejoy.miw.io)。 點擊主頁頁首導覽中的會員登入V1按鈕，進入蹦彩樂園會員登入頁面(http://dejoy.miw.io/member-login)，成功進入頁面後，輸入蹦彩樂園之管理員專屬帳號密碼，並且點擊登入按鈕。 當管理員登入成功後，頁面自動導航回蹦彩樂園官網主頁，且可發現頁首導覽中的會員登入V1按鈕消失，但卻出現新的會員中心按鈕，代表已成功登入管理員帳號，而當游標移至此按鈕上時，會下拉選單顯示各個管理員會員功能，最後點擊蹦彩NFT管理中心功能按鈕。 點擊蹦彩NFT管理中心功能按鈕後，即進入蹦彩NFT管理中心(不產生新視窗，而是重新渲染蹦彩NFT管理中心的頁面，https://thomas0913.github.io/nft_manager_interface_system)，並且可開始使用。 補充說明 目前蹦彩NFT管理中心之網址URL非最後使用的版本，在之後部屬上線至伺服器上時，會有正式的URL取代之。 "},"src/operation_flow/front-end_web_page/login.html":{"url":"src/operation_flow/front-end_web_page/login.html","title":"登入","keywords":"","body":"登入 操作步驟 在初始頁面(https://thomas0913.github.io/nft_manager_interface_system)點擊登入按鈕，進入蹦彩NFT管理中心登入頁面(https://thomas0913.github.io/nft_manager_interface_system/#/user/login)。 輸入蹦彩NFT管理中心管理員帳號與密碼，點擊登入按鈕。 當瀏覽器彈跳出警告提示並顯示登入成功時，點擊確認後，即自動進入蹦彩NFT管理中心主頁(https://thomas0913.github.io/nft_manager_interface_system/#/account/:username)。 補充說明 可能的登入錯誤問題 : 密碼錯誤 : 當瀏覽器彈跳出警告提示並顯示密碼錯誤時，表示所輸入的密碼，可能存在格式錯誤或輸入不正確。 帳號不存在 : 當瀏覽器彈跳出警告提示並顯示帳號不存在時，表示所輸入的帳號，可能存在格式錯誤或輸入不正確。 請輸入帳號或請輸入密碼 : 當瀏覽器彈跳出警告提示並顯示請輸入帳號或請輸入密碼時，表示未輸入任何帳號或密碼於輸入欄位中，請輸入後再嘗試點擊登入按鈕。 "},"src/operation_flow/front-end_web_page/wallet_connect.html":{"url":"src/operation_flow/front-end_web_page/wallet_connect.html","title":"錢包連接","keywords":"","body":"錢包連接 尚未完成開發 在此使用Google Chrome瀏覽器當作示範 1. 點擊錢包連接按鈕，瀏覽器彈跳警告對話框，顯示目前所使用的瀏覽器未安裝MetaMask擴充外掛套件。 2. 開啟額外新視窗，輸入[https://metamask.io](https://metamask.io)此URL網址，進入MetaMask官方網頁，在此網頁自行完成MetaMask安裝的官方教學。 3. 返回蹦彩NFT管理中心主頁([https://thomas0913.github.io/nft_manager_interface_system/#/account/:username](https://thomas0913.github.io/nft_manager_interface_system/#/account/:username))的[頁首區塊](../../layout_designing/pages_layout/home_page_route.md)，再次點擊錢包連接按鈕，如MetaMask擴充套件彈出視窗請求登入MetaMask時，表示已成功安裝MetaMask擴充套件於瀏覽器中。 * 尚未註冊MetaMask個人錢包 : > 假設已經事先安裝好MetaMask擴充套件於瀏覽器中。 1. 開啟額外新視窗，輸入[https://metamask.io](https://metamask.io)此URL網址，進入MetaMask官方網頁，在此網頁自行完成MetaMask錢包註冊的官方教學。 * 初次登入MetaMask錢包 : 1. 點擊當前瀏覽器視窗右上角之擴充按鈕(拼圖圖標)，在下拉選單中點擊選擇MetaMask擴充功能。 2. 當MetaMask擴充功能彈出視窗後，依照視窗中的登入導覽依序完成錢包登入程序。 3. 完成登入後，視窗會立即進入當前錢包主要帳戶之主頁，且能使用任何錢包上的功能。 * 其他可能發生的問題 : 在蹦彩NFT管理中心主頁([https://thomas0913.github.io/nft_manager_interface_system/#/account/:username](https://thomas0913.github.io/nft_manager_interface_system/#/account/:username))中的[頁尾區塊](../../layout_designing/pages_layout/home_page_route.md)點擊求助按鈕尋找可能的解決辦法，或者是點擊聯絡我們按鈕，請求我們一同協助解決問題。 -->"},"src/operation_flow/front-end_web_page/double_confirm.html":{"url":"src/operation_flow/front-end_web_page/double_confirm.html","title":"二次確認","keywords":"","body":"二次確認 尚未開發完成 "},"src/operation_flow/front-end_web_page/mint.html":{"url":"src/operation_flow/front-end_web_page/mint.html","title":"NFT批量鑄造","keywords":"","body":"NFT批量鑄造 尚未完成開發 "},"src/operation_flow/front-end_web_page/airdrop.html":{"url":"src/operation_flow/front-end_web_page/airdrop.html","title":"NFT批量空投","keywords":"","body":"NFT批量空投 尚未完成開發 "},"src/operation_flow/front-end_web_page/owner_checker.html":{"url":"src/operation_flow/front-end_web_page/owner_checker.html","title":"NFT持有人驗證","keywords":"","body":"NFT持有人驗證 操作步驟 瀏覽蹦彩NFT管理中心主頁(https://thomas0913.github.io/nft_manager_interface_system/#/account/:username)至持有人驗證區塊，留意輸入欄位可接受的以太坊錢包地址格式之範例，並且可知道目前未與伺服器後台，請求任何關於此區塊的資料。 嘗試輸入任意一個格式正確，而欲驗證的以太坊錢包地址字串於輸入欄位中，接著按下驗證按鈕。 等待些許時間後，如果提示顯示成功與伺服器連接字段，則會同時顯示此持有人之所有目前NFT收藏的概要資訊。 補充說明 可能的驗證問題 : 持有人未擁有任何NFT收藏 : 表示當前持有人未擁有任何蹦彩官方已發行的任一NFT項目。 錯誤格式輸入之錢包地址 : 表示所輸入之持有人以太坊錢包地址格式為無效非法的。 其他可能發生的問題 : 在蹦彩NFT管理中心主頁(https://thomas0913.github.io/nft_manager_interface_system/#/account/:username)中的頁尾區塊點擊求助按鈕尋找可能的解決辦法，或者是點擊聯絡我們按鈕，請求我們一同協助解決問題。 "},"src/operation_flow/front-end_web_page/owner_list.html":{"url":"src/operation_flow/front-end_web_page/owner_list.html","title":"NFT持有人名單","keywords":"","body":"NFT持有人名單 操作步驟 瀏覽蹦彩NFT管理中心主頁(https://thomas0913.github.io/nft_manager_interface_system/#/account/:username)至持有人名單區塊，同時可知道目前未與伺服器後台請求，任何關於此區塊的資料。 點擊加載按鈕，並等待些許時間後，自動顯示持有人名單主要功能區塊。 點擊下拉選單，選擇所要獲得NFT項目名稱，確認後點擊開啟按鈕則會馬上彈跳出該NFT項目對話框。 點擊對話框下方Excel下載按鈕，並在等待下載完畢後，點擊開啟瀏覽器下載好的Excel檔案，最後成功取得所要獲得之NFT項目持有人名單。 補充說明 額外需求 : 總名單Excel檔案下載 : 直接點擊持有人名單主要功能區塊中最下方NFT持有人總名單下載按鈕，在等待下載完畢後，點擊開啟瀏覽器下載好的Excel檔案，最後成功取得所要獲得之NFT項目總持有人名單。 其他可能發生的問題 : 在蹦彩NFT管理中心主頁(https://thomas0913.github.io/nft_manager_interface_system/#/account/:username)中的頁尾區塊點擊求助按鈕尋找可能的解決辦法，或者是點擊聯絡我們按鈕，請求我們一同協助解決問題。 "},"src/operation_flow/front-end_web_page/logout.html":{"url":"src/operation_flow/front-end_web_page/logout.html","title":"登出","keywords":"","body":"登出 操作步驟 在蹦彩NFT管理中心主頁(https://thomas0913.github.io/nft_manager_interface_system/#/account/:username)的頁首導覽區塊中，點擊登出按鈕，進入蹦彩NFT管理中心登出頁面(https://thomas0913.github.io/nft_manager_interface_system/#/user/:username/logout)。 當頁面閒置一定的時間後，會自動被帶回蹦彩NFT管理中心登入頁面(https://thomas0913.github.io/nft_manager_interface_system/user/login)。 補充說明 登出安全機制 : 尚未開發完成 當點擊登出且進入已登出頁面後，如點擊瀏覽器返回上一頁按鍵，是不能進入到蹦彩NFT管理中心主頁的，因此點擊返回上一頁按鍵時，會被導航至蹦彩NFT管理中心登入頁面。 "},"src/operation_flow/front-end_web_page/guide.html":{"url":"src/operation_flow/front-end_web_page/guide.html","title":"教學指導","keywords":"","body":"教學指導 尚未開發完成 "},"src/operation_flow/front-end_web_page/trading_data.html":{"url":"src/operation_flow/front-end_web_page/trading_data.html","title":"交易數據","keywords":"","body":"交易數據 尚未開發完成 "},"src/operation_flow/front-end_web_page/about.html":{"url":"src/operation_flow/front-end_web_page/about.html","title":"關於","keywords":"","body":"關於 尚未開發完成 "},"src/operation_flow/front-end_web_page/help.html":{"url":"src/operation_flow/front-end_web_page/help.html","title":"求助","keywords":"","body":"求助 尚未開發完成 "},"src/operation_flow/front-end_web_page/contact_us.html":{"url":"src/operation_flow/front-end_web_page/contact_us.html","title":"聯絡我們","keywords":"","body":"聯絡我們 尚未開發完成 "},"src/operation_flow/front-end_web_page/safety_auth.html":{"url":"src/operation_flow/front-end_web_page/safety_auth.html","title":"安全認證","keywords":"","body":"安全認證 尚未開發完成 "},"src/operation_flow/back-end_server/":{"url":"src/operation_flow/back-end_server/","title":"系統後台伺服器操作","keywords":"","body":"系統後台伺服器操作 摘要 此小節為關於NFT管理系統後台伺服器，各個API WebHook調閱資料的操作流程與解說。 快速導覽 WebHooks-OTP郵件認證 WebHooks-總NFT持有人名單 "},"src/operation_flow/back-end_server/webhook_OTP_email_verify.html":{"url":"src/operation_flow/back-end_server/webhook_OTP_email_verify.html","title":"WebHooks-OTP郵件認證","keywords":"","body":"WebHooks-OTP郵件認證 尚未開發完成 "},"src/operation_flow/back-end_server/webhook_all_owner_list.html":{"url":"src/operation_flow/back-end_server/webhook_all_owner_list.html","title":"WebHooks-總NFT持有人名單","keywords":"","body":"WebHooks-總NFT持有人名單 操作步驟 開啟新視窗，並且直接輸入總NFT持有人名單API之URL，呼叫蹦彩NFT管理中心之後台伺服器中總NFT持有人名單API功能，等待後台伺服器回應後，瀏覽器會立即下載NFT總持有人名單Excel檔案，點擊Excel檔案後，即可成功取得所要獲得之NFT項目總持有人名單。 補充說明 目前蹦彩NFT管理中心後台伺服器之網址URL非最後使用的版本，在之後部屬上線至伺服器上時，會有正式的URL取代之。 "},"src/general_program_standard_table/":{"url":"src/general_program_standard_table/","title":"總程式規格表","keywords":"","body":"總程式規格表 摘要 本章節主要目的，在於詳細的列出目前程式碼的用途規格表，而這樣做的原因，除了可以總結並整理整個專案的開發設計，還能拿來比對成果在實際上是否符合需求，審視哪些地方需要做修改。 快速導覽 前端規格 後端規格 "},"src/general_program_standard_table/front_end.html":{"url":"src/general_program_standard_table/front_end.html","title":"前端規格","keywords":"","body":"前端規格表 描述 藉由依照網站需求與功能，製作前端規格表的重點將著重於版面配置的規劃、動態效果的參考範例、程式功能的說明。 規格表 "},"src/general_program_standard_table/back_end.html":{"url":"src/general_program_standard_table/back_end.html","title":"後端規格","keywords":"","body":"後端規格表 描述 藉由依照網站需求與功能，因為畫面渲染的職責已轉交給前端去處理，因此製作前端規格表的重點將著重於API配置的規劃、動態效果的參考範例、程式功能的說明。 規格表 "},"src/conclusion/":{"url":"src/conclusion/","title":"結論","keywords":"","body":"結論 摘要 在最後章節的部分，除了做一個最後的結語，還另外整理了主要目前開發上遇到的問題，以及在未來可能的規劃。 快速導覽 延伸問題 未來規劃 "},"src/conclusion/extension_problem.html":{"url":"src/conclusion/extension_problem.html","title":"延伸問題","keywords":"","body":"延伸問題 "},"src/conclusion/future.html":{"url":"src/conclusion/future.html","title":"未來規劃","keywords":"","body":"未來規劃 "},"src/references.html":{"url":"src/references.html","title":"參考資料與附件","keywords":"","body":"參考資料與附件 "}}